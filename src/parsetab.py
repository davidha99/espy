
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD1 AND BOOLEAN CHAR CHARTONUM DEFINE EQUAL GREATEREQUAL GREATERTHAN ID IF ISBOOLEAN ISCHAR ISNULL ISNUM ISZERO LESSEQUAL LESSTHAN LET NOT NULL NUM NUMTOCHAR OR SUB1\n    program : np_gbl_scope expr\n    np_gbl_scope :\n    expr : literal\n         | variable\n         | unary_primitive\n         | conditional_expr\n         | arithmetic_primitive\n         | comparison_primitive\n         | definition\n         | let_binding\n    \n    literal   : NUM\n              | BOOLEAN\n              | CHAR\n              | NULL\n    \n    variable : ID\n    \n    unary_primitive : '(' unary expr ')'\n    \n    unary : ADD1\n          | SUB1\n          | CHARTONUM\n          | NUMTOCHAR\n          | ISZERO\n          | ISNULL\n          | NOT\n          | ISNUM\n          | ISBOOLEAN\n          | ISCHAR\n    \n    conditional_expr : '(' IF np_create_if_labels test np_seen_test expr np_seen_consequent expr np_seen_alternate ')'\n    np_create_if_labels :\n    test : '(' boolean_op expr expr with_multiple_expr ')'\n         | expr\n    \n    with_multiple_expr : with_multiple_expr expr\n                       | empty\n    \n    boolean_op : AND\n               | OR\n    \n    comparison_op : LESSEQUAL\n                  | GREATEREQUAL\n                  | LESSTHAN\n                  | GREATERTHAN\n                  | EQUAL\n    np_seen_test :np_seen_consequent :np_seen_alternate :\n    comparison_primitive : '(' np_compar_seen_paren comparison_op np_compar_seen_operator compar_operands ')'\n    np_compar_seen_paren :np_compar_seen_operator :\n    compar_operands : expr np_operands_seen_operand expr np_operands_seen_operand\n    \n    arithmetic_primitive : '(' np_arithm_seen_paren operator np_arithm_seen_operator operands ')'\n    np_arithm_seen_paren :np_arithm_seen_operator :\n    operands : expr np_operands_seen_operand expr np_operands_seen_operand more_expr\n    \n    more_expr : more_expr expr np_operands_seen_operand\n              | empty\n    np_operands_seen_operand :\n    operator : '+'\n             | '-'\n             | '*'\n             | '/'\n             | boolean_op\n    \n    definition : '(' DEFINE def_definition expr with_multiple_expr ')' \n    np_create_func_labels :\n    def_definition : '(' ID np_create_func_labels with_arguments ')'\n    \n    with_arguments : with_multiple_chars\n    \n    with_multiple_chars : ID with_multiple_chars\n                        | empty\n    \n    let_binding : '(' LET np_seen_let binding_list expr ')'\n    np_seen_let :\n    binding_list : '(' with_multiple_bindings ')'\n    \n    with_multiple_bindings : with_multiple_bindings '[' np_let_seen_bracket ID np_seen_variable expr np_seen_bind_expr ']'\n                           | '[' np_let_seen_bracket ID np_seen_variable expr np_seen_bind_expr ']'\n    np_seen_bind_expr :np_let_seen_bracket :np_seen_variable :empty :"
    
_lr_action_items = {'NUM':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,55,56,57,58,60,62,63,64,66,68,70,71,75,76,77,78,79,80,85,86,87,90,91,92,93,96,98,99,101,103,104,105,107,108,109,111,112,115,],[-2,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,12,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,12,-49,-54,-55,-56,-57,-58,-33,-34,-45,-35,-36,-37,-38,-39,12,-16,-40,-30,12,12,-73,12,12,12,-53,-53,12,-32,12,-41,-47,12,-43,12,-31,-59,-67,-65,-73,12,-53,-61,-72,12,-73,-72,12,-29,12,-52,12,-27,-53,-51,]),'BOOLEAN':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,55,56,57,58,60,62,63,64,66,68,70,71,75,76,77,78,79,80,85,86,87,90,91,92,93,96,98,99,101,103,104,105,107,108,109,111,112,115,],[-2,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,13,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,13,-49,-54,-55,-56,-57,-58,-33,-34,-45,-35,-36,-37,-38,-39,13,-16,-40,-30,13,13,-73,13,13,13,-53,-53,13,-32,13,-41,-47,13,-43,13,-31,-59,-67,-65,-73,13,-53,-61,-72,13,-73,-72,13,-29,13,-52,13,-27,-53,-51,]),'CHAR':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,55,56,57,58,60,62,63,64,66,68,70,71,75,76,77,78,79,80,85,86,87,90,91,92,93,96,98,99,101,103,104,105,107,108,109,111,112,115,],[-2,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,14,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,14,-49,-54,-55,-56,-57,-58,-33,-34,-45,-35,-36,-37,-38,-39,14,-16,-40,-30,14,14,-73,14,14,14,-53,-53,14,-32,14,-41,-47,14,-43,14,-31,-59,-67,-65,-73,14,-53,-61,-72,14,-73,-72,14,-29,14,-52,14,-27,-53,-51,]),'NULL':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,53,55,56,57,58,60,62,63,64,66,68,70,71,75,76,77,78,79,80,85,86,87,90,91,92,93,96,98,99,101,103,104,105,107,108,109,111,112,115,],[-2,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,15,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,15,-49,-54,-55,-56,-57,-58,-33,-34,-45,-35,-36,-37,-38,-39,15,-16,-40,-30,15,15,-73,15,15,15,-53,-53,15,-32,15,-41,-47,15,-43,15,-31,-59,-67,-65,-73,15,-53,-61,-72,15,-73,-72,15,-29,15,-52,15,-27,-53,-51,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,60,62,63,64,66,68,69,70,71,73,75,76,77,78,79,80,81,85,86,87,88,89,90,91,92,93,96,97,98,99,101,103,104,105,107,108,109,111,112,115,],[-2,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,16,-28,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,16,-49,-54,-55,-56,-57,-58,-33,-34,-45,-35,-36,-37,-38,-39,59,16,-16,-40,-30,16,16,-60,-73,16,16,16,-53,-53,81,16,-32,-71,16,-41,-47,16,-43,16,81,-31,-59,-67,-71,98,-65,-73,16,-53,-61,103,-72,16,-73,-72,16,-29,16,-52,16,-27,-53,-51,]),'(':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,55,56,57,58,60,62,63,64,66,68,70,71,75,76,77,78,79,80,85,86,87,90,91,92,93,96,98,99,101,103,104,105,107,108,109,111,112,115,],[-2,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,17,-28,50,-66,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,54,-49,-54,-55,-56,-57,-58,-33,-34,-45,-35,-36,-37,-38,-39,17,61,-16,-40,-30,17,17,-73,17,17,17,-53,-53,17,-32,17,-41,-47,17,-43,17,-31,-59,-67,-65,-73,17,-53,-61,-72,17,-73,-72,17,-29,17,-52,17,-27,-53,-51,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,53,77,79,86,90,111,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-47,-43,-59,-65,-27,]),')':([4,5,6,7,8,9,10,11,12,13,14,15,16,34,53,59,60,65,67,69,70,71,72,74,77,79,81,82,83,84,85,86,90,91,93,94,95,99,100,101,102,106,107,108,111,112,115,117,118,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,53,-16,-60,-73,77,79,-73,86,-32,87,90,-47,-43,-73,96,-62,-64,-31,-59,-65,-73,-53,-53,-63,105,-42,-73,-46,111,-50,-52,-27,-53,-51,-69,-68,]),']':([4,5,6,7,8,9,10,11,12,13,14,15,16,53,77,79,86,90,110,111,113,114,116,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-47,-43,-59,-65,-70,-27,-70,117,118,]),'IF':([17,54,],[19,19,]),'DEFINE':([17,54,],[22,22,]),'LET':([17,54,],[23,23,]),'ADD1':([17,54,],[24,24,]),'SUB1':([17,54,],[25,25,]),'CHARTONUM':([17,54,],[26,26,]),'NUMTOCHAR':([17,54,],[27,27,]),'ISZERO':([17,54,],[28,28,]),'ISNULL':([17,54,],[29,29,]),'NOT':([17,54,],[30,30,]),'ISNUM':([17,54,],[31,31,]),'ISBOOLEAN':([17,54,],[32,32,]),'ISCHAR':([17,54,],[33,33,]),'+':([17,20,54,],[-48,37,-48,]),'-':([17,20,54,],[-48,38,-48,]),'*':([17,20,54,],[-48,39,-48,]),'/':([17,20,54,],[-48,40,-48,]),'AND':([17,20,54,],[-48,42,42,]),'OR':([17,20,54,],[-48,43,43,]),'LESSEQUAL':([17,21,54,],[-44,45,-44,]),'GREATEREQUAL':([17,21,54,],[-44,46,-44,]),'LESSTHAN':([17,21,54,],[-44,47,-44,]),'GREATERTHAN':([17,21,54,],[-44,48,-44,]),'EQUAL':([17,21,54,],[-44,49,-44,]),'[':([61,72,117,118,],[73,88,-69,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_gbl_scope':([0,],[2,]),'expr':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[3,34,56,60,66,68,74,75,76,85,91,93,94,100,85,110,112,113,]),'literal':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'variable':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'unary_primitive':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'conditional_expr':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'arithmetic_primitive':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'comparison_primitive':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'definition':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'let_binding':([2,18,35,51,57,58,62,63,64,70,75,78,80,92,99,104,107,109,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'unary':([17,54,],[18,18,]),'np_arithm_seen_paren':([17,54,],[20,20,]),'np_compar_seen_paren':([17,54,],[21,21,]),'np_create_if_labels':([19,],[35,]),'operator':([20,],[36,]),'boolean_op':([20,54,],[41,63,]),'comparison_op':([21,],[44,]),'def_definition':([22,],[51,]),'np_seen_let':([23,],[52,]),'test':([35,],[55,]),'np_arithm_seen_operator':([36,],[57,]),'np_compar_seen_operator':([44,],[58,]),'binding_list':([52,],[62,]),'np_seen_test':([55,],[64,]),'operands':([57,],[65,]),'compar_operands':([58,],[67,]),'np_create_func_labels':([59,],[69,]),'with_multiple_expr':([60,91,],[70,99,]),'empty':([60,69,81,91,101,],[71,84,84,71,108,]),'with_multiple_bindings':([61,],[72,]),'np_operands_seen_operand':([66,68,93,94,112,],[78,80,101,102,115,]),'with_arguments':([69,],[82,]),'with_multiple_chars':([69,81,],[83,95,]),'np_let_seen_bracket':([73,88,],[89,97,]),'np_seen_consequent':([76,],[92,]),'np_seen_variable':([98,103,],[104,109,]),'np_seen_alternate':([100,],[106,]),'more_expr':([101,],[107,]),'np_seen_bind_expr':([110,113,],[114,116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> np_gbl_scope expr','program',2,'p_program','parser.py',46),
  ('np_gbl_scope -> <empty>','np_gbl_scope',0,'p_np_gbl_scope','parser.py',61),
  ('expr -> literal','expr',1,'p_expr','parser.py',68),
  ('expr -> variable','expr',1,'p_expr','parser.py',69),
  ('expr -> unary_primitive','expr',1,'p_expr','parser.py',70),
  ('expr -> conditional_expr','expr',1,'p_expr','parser.py',71),
  ('expr -> arithmetic_primitive','expr',1,'p_expr','parser.py',72),
  ('expr -> comparison_primitive','expr',1,'p_expr','parser.py',73),
  ('expr -> definition','expr',1,'p_expr','parser.py',74),
  ('expr -> let_binding','expr',1,'p_expr','parser.py',75),
  ('literal -> NUM','literal',1,'p_literal','parser.py',81),
  ('literal -> BOOLEAN','literal',1,'p_literal','parser.py',82),
  ('literal -> CHAR','literal',1,'p_literal','parser.py',83),
  ('literal -> NULL','literal',1,'p_literal','parser.py',84),
  ('variable -> ID','variable',1,'p_variable','parser.py',94),
  ('unary_primitive -> ( unary expr )','unary_primitive',4,'p_unary_primitive','parser.py',118),
  ('unary -> ADD1','unary',1,'p_unary','parser.py',131),
  ('unary -> SUB1','unary',1,'p_unary','parser.py',132),
  ('unary -> CHARTONUM','unary',1,'p_unary','parser.py',133),
  ('unary -> NUMTOCHAR','unary',1,'p_unary','parser.py',134),
  ('unary -> ISZERO','unary',1,'p_unary','parser.py',135),
  ('unary -> ISNULL','unary',1,'p_unary','parser.py',136),
  ('unary -> NOT','unary',1,'p_unary','parser.py',137),
  ('unary -> ISNUM','unary',1,'p_unary','parser.py',138),
  ('unary -> ISBOOLEAN','unary',1,'p_unary','parser.py',139),
  ('unary -> ISCHAR','unary',1,'p_unary','parser.py',140),
  ('conditional_expr -> ( IF np_create_if_labels test np_seen_test expr np_seen_consequent expr np_seen_alternate )','conditional_expr',10,'p_conditional_expr','parser.py',146),
  ('np_create_if_labels -> <empty>','np_create_if_labels',0,'p_np_create_if_labels','parser.py',155),
  ('test -> ( boolean_op expr expr with_multiple_expr )','test',6,'p_test','parser.py',167),
  ('test -> expr','test',1,'p_test','parser.py',168),
  ('with_multiple_expr -> with_multiple_expr expr','with_multiple_expr',2,'p_with_multiple_expr','parser.py',173),
  ('with_multiple_expr -> empty','with_multiple_expr',1,'p_with_multiple_expr','parser.py',174),
  ('boolean_op -> AND','boolean_op',1,'p_boolean_op','parser.py',179),
  ('boolean_op -> OR','boolean_op',1,'p_boolean_op','parser.py',180),
  ('comparison_op -> LESSEQUAL','comparison_op',1,'p_comparison_op','parser.py',186),
  ('comparison_op -> GREATEREQUAL','comparison_op',1,'p_comparison_op','parser.py',187),
  ('comparison_op -> LESSTHAN','comparison_op',1,'p_comparison_op','parser.py',188),
  ('comparison_op -> GREATERTHAN','comparison_op',1,'p_comparison_op','parser.py',189),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','parser.py',190),
  ('np_seen_test -> <empty>','np_seen_test',0,'p_np_seen_test','parser.py',196),
  ('np_seen_consequent -> <empty>','np_seen_consequent',0,'p_np_seen_consequent','parser.py',208),
  ('np_seen_alternate -> <empty>','np_seen_alternate',0,'p_np_seen_alternate','parser.py',216),
  ('comparison_primitive -> ( np_compar_seen_paren comparison_op np_compar_seen_operator compar_operands )','comparison_primitive',6,'p_comparison_primitive','parser.py',224),
  ('np_compar_seen_paren -> <empty>','np_compar_seen_paren',0,'p_np_compar_seen_paren','parser.py',240),
  ('np_compar_seen_operator -> <empty>','np_compar_seen_operator',0,'p_np_compar_seen_operator','parser.py',250),
  ('compar_operands -> expr np_operands_seen_operand expr np_operands_seen_operand','compar_operands',4,'p_compar_operands','parser.py',256),
  ('arithmetic_primitive -> ( np_arithm_seen_paren operator np_arithm_seen_operator operands )','arithmetic_primitive',6,'p_arithmetic_primitive','parser.py',261),
  ('np_arithm_seen_paren -> <empty>','np_arithm_seen_paren',0,'p_np_arithm_seen_paren','parser.py',277),
  ('np_arithm_seen_operator -> <empty>','np_arithm_seen_operator',0,'p_np_arithm_seen_operator','parser.py',287),
  ('operands -> expr np_operands_seen_operand expr np_operands_seen_operand more_expr','operands',5,'p_operands','parser.py',293),
  ('more_expr -> more_expr expr np_operands_seen_operand','more_expr',3,'p_more_expr','parser.py',298),
  ('more_expr -> empty','more_expr',1,'p_more_expr','parser.py',299),
  ('np_operands_seen_operand -> <empty>','np_operands_seen_operand',0,'p_np_operands_seen_operand','parser.py',304),
  ('operator -> +','operator',1,'p_operator','parser.py',352),
  ('operator -> -','operator',1,'p_operator','parser.py',353),
  ('operator -> *','operator',1,'p_operator','parser.py',354),
  ('operator -> /','operator',1,'p_operator','parser.py',355),
  ('operator -> boolean_op','operator',1,'p_operator','parser.py',356),
  ('definition -> ( DEFINE def_definition expr with_multiple_expr )','definition',6,'p_definition','parser.py',362),
  ('np_create_func_labels -> <empty>','np_create_func_labels',0,'p_np_create_func_labels','parser.py',367),
  ('def_definition -> ( ID np_create_func_labels with_arguments )','def_definition',5,'p_def_definition','parser.py',376),
  ('with_arguments -> with_multiple_chars','with_arguments',1,'p_with_arguments','parser.py',381),
  ('with_multiple_chars -> ID with_multiple_chars','with_multiple_chars',2,'p_with_multiple_chars','parser.py',386),
  ('with_multiple_chars -> empty','with_multiple_chars',1,'p_with_multiple_chars','parser.py',387),
  ('let_binding -> ( LET np_seen_let binding_list expr )','let_binding',6,'p_let_binding','parser.py',392),
  ('np_seen_let -> <empty>','np_seen_let',0,'p_np_seen_let','parser.py',404),
  ('binding_list -> ( with_multiple_bindings )','binding_list',3,'p_binding_list','parser.py',413),
  ('with_multiple_bindings -> with_multiple_bindings [ np_let_seen_bracket ID np_seen_variable expr np_seen_bind_expr ]','with_multiple_bindings',8,'p_with_multiple_bindings','parser.py',418),
  ('with_multiple_bindings -> [ np_let_seen_bracket ID np_seen_variable expr np_seen_bind_expr ]','with_multiple_bindings',7,'p_with_multiple_bindings','parser.py',419),
  ('np_seen_bind_expr -> <empty>','np_seen_bind_expr',0,'p_np_seen_bind_expr','parser.py',432),
  ('np_let_seen_bracket -> <empty>','np_let_seen_bracket',0,'p_np_let_seen_bracket','parser.py',442),
  ('np_seen_variable -> <empty>','np_seen_variable',0,'p_np_seen_variable','parser.py',447),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',476),
]
