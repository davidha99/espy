
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD1 AND BOOLEAN CHAR CHARTONUM ID IF ISBOOLEAN ISCHAR ISNULL ISNUM ISZERO NOT NULL NUM NUMTOCHAR OR SUB1\n    program : expr\n    \n    expr : literal\n         | unary_primitive\n         | conditional_expr\n         | binary_primitive\n    \n    literal   : NUM\n              | BOOLEAN\n              | CHAR\n              | NULL\n    \n    unary_primitive : '(' unary expr ')'\n    \n    unary : ADD1\n          | SUB1\n          | CHARTONUM\n          | NUMTOCHAR\n          | ISZERO\n          | ISNULL\n          | NOT\n          | ISNUM\n          | ISBOOLEAN\n          | ISCHAR\n    \n    conditional_expr : '(' IF create_if_labels test seen_test expr seen_consequent expr seen_alternate ')'\n    create_if_labels :\n    test : '(' boolean_op expr expr with_multiple_expr ')'\n         | expr\n    \n    with_multiple_expr : with_multiple_expr expr\n                       | empty\n    \n    boolean_op : AND\n               | OR\n    seen_test :seen_consequent :seen_alternate :\n    binary_primitive : '(' operator expr seen_operand expr ')'\n    \n    operator : '+'\n             | '-'\n             | '*'\n             | '/'\n    seen_operand :empty :"
    
_lr_action_items = {'NUM':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,53,],[7,-2,-3,-4,-5,-6,-7,-8,-9,7,-22,7,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-33,-34,-35,-36,7,-37,-10,-29,-24,7,7,-27,-28,7,7,-30,-32,-38,7,7,-26,-25,-23,-21,]),'BOOLEAN':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,53,],[8,-2,-3,-4,-5,-6,-7,-8,-9,8,-22,8,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-33,-34,-35,-36,8,-37,-10,-29,-24,8,8,-27,-28,8,8,-30,-32,-38,8,8,-26,-25,-23,-21,]),'CHAR':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,53,],[9,-2,-3,-4,-5,-6,-7,-8,-9,9,-22,9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-33,-34,-35,-36,9,-37,-10,-29,-24,9,9,-27,-28,9,9,-30,-32,-38,9,9,-26,-25,-23,-21,]),'NULL':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,53,],[10,-2,-3,-4,-5,-6,-7,-8,-9,10,-22,10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-33,-34,-35,-36,10,-37,-10,-29,-24,10,10,-27,-28,10,10,-30,-32,-38,10,10,-26,-25,-23,-21,]),'(':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,42,43,44,45,46,47,48,50,51,53,],[11,-2,-3,-4,-5,-6,-7,-8,-9,11,-22,11,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-33,-34,-35,-36,33,-37,-10,-29,-24,11,11,-27,-28,11,11,-30,-32,-38,11,11,-26,-25,-23,-21,]),'$end':([1,2,3,4,5,6,7,8,9,10,32,44,53,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-32,-21,]),')':([3,4,5,6,7,8,9,10,29,32,41,44,45,47,48,49,50,52,53,],[-2,-3,-4,-5,-6,-7,-8,-9,32,-10,44,-32,-38,51,-26,-31,-25,53,-21,]),'IF':([11,33,],[13,13,]),'ADD1':([11,33,],[15,15,]),'SUB1':([11,33,],[16,16,]),'CHARTONUM':([11,33,],[17,17,]),'NUMTOCHAR':([11,33,],[18,18,]),'ISZERO':([11,33,],[19,19,]),'ISNULL':([11,33,],[20,20,]),'NOT':([11,33,],[21,21,]),'ISNUM':([11,33,],[22,22,]),'ISBOOLEAN':([11,33,],[23,23,]),'ISCHAR':([11,33,],[24,24,]),'+':([11,33,],[25,25,]),'-':([11,33,],[26,26,]),'*':([11,33,],[27,27,]),'/':([11,33,],[28,28,]),'AND':([33,],[38,]),'OR':([33,],[39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expr':([0,12,14,30,36,37,40,42,46,47,],[2,29,31,35,41,42,43,45,49,50,]),'literal':([0,12,14,30,36,37,40,42,46,47,],[3,3,3,3,3,3,3,3,3,3,]),'unary_primitive':([0,12,14,30,36,37,40,42,46,47,],[4,4,4,4,4,4,4,4,4,4,]),'conditional_expr':([0,12,14,30,36,37,40,42,46,47,],[5,5,5,5,5,5,5,5,5,5,]),'binary_primitive':([0,12,14,30,36,37,40,42,46,47,],[6,6,6,6,6,6,6,6,6,6,]),'unary':([11,33,],[12,12,]),'operator':([11,33,],[14,14,]),'create_if_labels':([13,],[30,]),'test':([30,],[34,]),'seen_operand':([31,],[36,]),'boolean_op':([33,],[37,]),'seen_test':([34,],[40,]),'seen_consequent':([43,],[46,]),'with_multiple_expr':([45,],[47,]),'empty':([45,],[48,]),'seen_alternate':([49,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expr','program',1,'p_program','parser.py',19),
  ('expr -> literal','expr',1,'p_expr','parser.py',33),
  ('expr -> unary_primitive','expr',1,'p_expr','parser.py',34),
  ('expr -> conditional_expr','expr',1,'p_expr','parser.py',35),
  ('expr -> binary_primitive','expr',1,'p_expr','parser.py',36),
  ('literal -> NUM','literal',1,'p_literal','parser.py',42),
  ('literal -> BOOLEAN','literal',1,'p_literal','parser.py',43),
  ('literal -> CHAR','literal',1,'p_literal','parser.py',44),
  ('literal -> NULL','literal',1,'p_literal','parser.py',45),
  ('unary_primitive -> ( unary expr )','unary_primitive',4,'p_unary_primitive','parser.py',57),
  ('unary -> ADD1','unary',1,'p_unary','parser.py',71),
  ('unary -> SUB1','unary',1,'p_unary','parser.py',72),
  ('unary -> CHARTONUM','unary',1,'p_unary','parser.py',73),
  ('unary -> NUMTOCHAR','unary',1,'p_unary','parser.py',74),
  ('unary -> ISZERO','unary',1,'p_unary','parser.py',75),
  ('unary -> ISNULL','unary',1,'p_unary','parser.py',76),
  ('unary -> NOT','unary',1,'p_unary','parser.py',77),
  ('unary -> ISNUM','unary',1,'p_unary','parser.py',78),
  ('unary -> ISBOOLEAN','unary',1,'p_unary','parser.py',79),
  ('unary -> ISCHAR','unary',1,'p_unary','parser.py',80),
  ('conditional_expr -> ( IF create_if_labels test seen_test expr seen_consequent expr seen_alternate )','conditional_expr',10,'p_conditional_expr','parser.py',89),
  ('create_if_labels -> <empty>','create_if_labels',0,'p_create_if_labels','parser.py',98),
  ('test -> ( boolean_op expr expr with_multiple_expr )','test',6,'p_test','parser.py',111),
  ('test -> expr','test',1,'p_test','parser.py',112),
  ('with_multiple_expr -> with_multiple_expr expr','with_multiple_expr',2,'p_with_multiple_expr','parser.py',118),
  ('with_multiple_expr -> empty','with_multiple_expr',1,'p_with_multiple_expr','parser.py',119),
  ('boolean_op -> AND','boolean_op',1,'p_boolean_op','parser.py',125),
  ('boolean_op -> OR','boolean_op',1,'p_boolean_op','parser.py',126),
  ('seen_test -> <empty>','seen_test',0,'p_seen_test','parser.py',132),
  ('seen_consequent -> <empty>','seen_consequent',0,'p_seen_consequent','parser.py',144),
  ('seen_alternate -> <empty>','seen_alternate',0,'p_seen_alternate','parser.py',152),
  ('binary_primitive -> ( operator expr seen_operand expr )','binary_primitive',6,'p_binary_primitive','parser.py',161),
  ('operator -> +','operator',1,'p_operator','parser.py',187),
  ('operator -> -','operator',1,'p_operator','parser.py',188),
  ('operator -> *','operator',1,'p_operator','parser.py',189),
  ('operator -> /','operator',1,'p_operator','parser.py',190),
  ('seen_operand -> <empty>','seen_operand',0,'p_seen_operand','parser.py',196),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',211),
]
